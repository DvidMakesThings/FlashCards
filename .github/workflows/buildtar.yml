name: Build APK with WSL2

on:
  push:
    branches:
      - master

jobs:
  setup-wsl-build:
    runs-on: windows-latest

    steps:
    # Step 1: Download the WSL tar file from Google Drive
    - name: Download WSL2 Distribution
      shell: bash
      run: |
        echo "Starting the download of the tar file..."
        curl -L -o Ubuntu-20.04_With_buildozer.tar "${{ secrets.UBUNTU_TARBALL_ARTIFACT }}"
        echo "Checking if the file is completely downloaded..."
        while [ ! -f "Ubuntu-20.04_With_buildozer.tar" ] || [ $(stat -c%s "Ubuntu-20.04_With_buildozer.tar") -lt 10000000000 ]; do
            echo "File size: $(stat -c%s "Ubuntu-20.04_With_buildozer.tar") bytes. Waiting for complete download..."
            sleep 5
        done
        echo "Tar file downloaded successfully."



    # Step 2: Ensure the directory exists for the WSL distribution
    - name: Create WSL Distribution Directory
      run: |
        mkdir -p C:\\WSL\\UbuntuBuildozer

    # Step 3: Import the WSL tar file as a new distribution
    - name: Install WSL2 Distribution
      run: |
        wsl --import UbuntuBuildozer C:\\WSL\\UbuntuBuildozer Ubuntu-20.04_With_buildozer.tar
        wsl --set-version UbuntuBuildozer 2

    # Step 4: Run your autobuild script in the WSL2 distribution with user and password
    - name: Build APK in WSL2
      env:
        WSL2_USER: ${{ secrets.WSL2_USER }}
        WSL2_PSW: ${{ secrets.WSL2_PSW }}
      run: |
        echo ${{ secrets.WSL2_PSW }} | wsl -d UbuntuBuildozer -u ${{ secrets.WSL2_USER }} -- bash -c "
        cd ~/FlashCards && \
        git pull origin master && \
        buildozer -v android debug && \
        VERSION=\$(grep '__version__' main.py | cut -d \"'\" -f 2) && \
        BUILD_INFO_FILE=\"build_info.txt\" && \
        if [ ! -f \"\$BUILD_INFO_FILE\" ]; then \
          echo \"0\" > \"\$BUILD_INFO_FILE\"; \
          echo \"\$VERSION\" >> \"\$BUILD_INFO_FILE\"; \
        fi && \
        BUILD_NUMBER=\$(sed -n '1p' \"\$BUILD_INFO_FILE\") && \
        LAST_VERSION=\$(sed -n '2p' \"\$BUILD_INFO_FILE\") && \
        if [ \"\$VERSION\" != \"\$LAST_VERSION\" ]; then \
          BUILD_NUMBER=0; \
        fi && \
        BUILD_NUMBER=\$((BUILD_NUMBER + 1)) && \
        echo \"\$BUILD_NUMBER\" > \"\$BUILD_INFO_FILE\"; \
        echo \"\$VERSION\" >> \"\$BUILD_INFO_FILE\"; \
        APK_DIR=\"bin\" && \
        APK_NAME=\"Wortmeister_v\${VERSION}\${BUILD_NUMBER}.apk\" && \
        mv \$APK_DIR/*-debug.apk \$APK_DIR/\$APK_NAME && \
        rm -f \$APK_DIR/*-debug.apk && \
        git add . && \
        git commit -m \"APK autobuilder\" && \
        git push https://DvidMakesThings:${{ secrets.PUSH }}@github.com/DvidMakesThings/FlashCards.git master
        "

    # Step 5: Output completion message
    - name: Success
      run: echo "APK Build and Push process completed successfully."
